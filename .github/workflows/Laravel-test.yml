name: Laravel CI

# Definisikan event yang akan memicu workflow ini berjalan
on:
  push:
    branches: [ "main", "master", "develop" ] # Ganti dengan nama branch Anda
  pull_request:
    branches: [ "main", "master", "develop" ] # Ganti dengan nama branch Anda

# Definisikan pekerjaan (jobs) yang akan dijalankan
jobs:
  laravel-tests:
    # Tentukan runner (lingkungan VM) yang akan digunakan
    runs-on: ubuntu-latest # Atau self-hosted jika Anda punya runner sendiri

    # Definisikan service yang dibutuhkan (misalnya, database)
    services:
      mysql:
        image: mysql:8.0 # Menggunakan MySQL 8.0
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: yes # Izinkan password kosong untuk CI
          MYSQL_DATABASE: laravel_test # Nama database untuk testing
        ports:
          - 3306:3306 # Map port MySQL
        options: --health-cmd="mysqladmin ping --silent" --health-interval=10s --health-timeout=5s --health-retries=3

    # Definisikan langkah-langkah (steps) dalam pekerjaan ini
    steps:
      - name: Checkout code
        uses: actions/checkout@v4 # Mengambil kode dari repository

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2' # Ganti dengan versi PHP yang Anda gunakan (misal: '8.1', '8.3')
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, mysql, bcmath, soap, intl, gd, exif, iconv, imagick # Extension PHP yang dibutuhkan
          ini-values: post_max_size=256M, upload_max_filesize=256M, memory_limit=512M
          coverage: none # Atau 'xdebug' / 'pcov' jika Anda ingin generate code coverage

      - name: Copy .env
        run: |
          # Buat file .env dari .env.example
          php -r "file_exists('.env') || copy('.env.example', '.env');"

      - name: Install Composer Dependencies
        run: composer install --prefer-dist --no-interaction --no-progress --no-suggest

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Create Database Tables
        run: |
          # Set konfigurasi database untuk testing
          php artisan config:clear
          php artisan migrate --force # --force untuk konfirmasi di production

      - name: Run PHPUnit Tests
        run: php artisan test # atau './vendor/bin/phpunit' jika Anda tidak menggunakan Laravel 9+

      # Langkah opsional: Static Analysis dengan PHPStan
      - name: Run PHPStan
        run: ./vendor/bin/phpstan analyse # Sesuaikan dengan perintah PHPStan Anda

      # Langkah opsional: Code Style dengan Laravel Pint
      - name: Run Laravel Pint
        # Pint akan keluar dengan error code jika ada masalah style
        # Gunakan --test untuk memeriksa tanpa mengubah file
        run: ./vendor/bin/pint --test # atau ./vendor/bin/pint --check

      # Langkah opsional: Build Assets (jika Anda menggunakan frontend seperti Vite/Webpack)
      # - name: Install Node.js
      #   uses: actions/setup-node@v4
      #   with:
      #     node-version: '20' # Ganti dengan versi Node.js yang Anda gunakan

      # - name: Install NPM Dependencies
      #   run: npm install

      # - name: Build Assets
      #   run: npm run build # Atau 'npm run dev' atau 'npm run prod' tergantung konfigurasi Anda
